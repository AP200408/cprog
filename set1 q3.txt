#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <semaphore.h>
#include <fcntl.h> // For O_CREAT and O_EXCL

void print_PID() {
    int PID = getpid();
    char str[100];
    sprintf(str, "My process ID is: %d\n", PID);
    for (int i = 0; i < strlen(str); i++) {
        fprintf(stderr, "%c", str[i]);
        sleep(1);
    }
}

int main() {
    const char *sem_name = "/my_semaphore";
    sem_t *sem = sem_open(sem_name, O_CREAT, 0644, 1);

    if (sem == SEM_FAILED) {
        perror("sem_open failed");
        exit(EXIT_FAILURE);
    }

    pid_t p1 = fork();
    if (p1 == 0) {
        sem_wait(sem); // Wait on semaphore
        print_PID();
        sem_post(sem); // Release semaphore
        exit(0);
    }

    pid_t p2 = fork();
    if (p2 == 0) {
        sem_wait(sem); // Wait on semaphore
        print_PID();
        sem_post(sem); // Release semaphore
        exit(0);
    }

    wait(NULL);
    wait(NULL);

    sem_close(sem);
    sem_unlink(sem_name);
    return 0;
}
